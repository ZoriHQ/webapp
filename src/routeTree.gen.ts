/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SelectTeamRouteImport } from './routes/select-team'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CreateTeamRouteImport } from './routes/create-team'
import { Route as AboutRouteImport } from './routes/about'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedProjectsRouteImport } from './routes/_protected.projects'
import { Route as ProtectedProjectsIndexRouteImport } from './routes/_protected.projects.index'
import { Route as ProtectedProjectsNewRouteImport } from './routes/_protected.projects.new'
import { Route as ProtectedProjectsProjectIdRouteImport } from './routes/_protected.projects.$projectId'
import { Route as ProtectedProjectsProjectIdIndexRouteImport } from './routes/_protected.projects.$projectId.index'
import { Route as ProtectedProjectsProjectIdSettingsRouteImport } from './routes/_protected.projects.$projectId.settings'
import { Route as ProtectedProjectsProjectIdRevenueRouteImport } from './routes/_protected.projects.$projectId.revenue'
import { Route as ProtectedProjectsProjectIdLlmTracesRouteImport } from './routes/_protected.projects.$projectId.llm-traces'
import { Route as ProtectedProjectsProjectIdGoalsRouteImport } from './routes/_protected.projects.$projectId.goals'
import { Route as ProtectedProjectsProjectIdEventsRouteImport } from './routes/_protected.projects.$projectId.events'
import { Route as ProtectedProjectsProjectIdAnalyticsRouteImport } from './routes/_protected.projects.$projectId.analytics'

const SelectTeamRoute = SelectTeamRouteImport.update({
  id: '/select-team',
  path: '/select-team',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateTeamRoute = CreateTeamRouteImport.update({
  id: '/create-team',
  path: '/create-team',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedProjectsRoute = ProtectedProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProjectsIndexRoute = ProtectedProjectsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedProjectsRoute,
} as any)
const ProtectedProjectsNewRoute = ProtectedProjectsNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ProtectedProjectsRoute,
} as any)
const ProtectedProjectsProjectIdRoute =
  ProtectedProjectsProjectIdRouteImport.update({
    id: '/$projectId',
    path: '/$projectId',
    getParentRoute: () => ProtectedProjectsRoute,
  } as any)
const ProtectedProjectsProjectIdIndexRoute =
  ProtectedProjectsProjectIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedProjectsProjectIdRoute,
  } as any)
const ProtectedProjectsProjectIdSettingsRoute =
  ProtectedProjectsProjectIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => ProtectedProjectsProjectIdRoute,
  } as any)
const ProtectedProjectsProjectIdRevenueRoute =
  ProtectedProjectsProjectIdRevenueRouteImport.update({
    id: '/revenue',
    path: '/revenue',
    getParentRoute: () => ProtectedProjectsProjectIdRoute,
  } as any)
const ProtectedProjectsProjectIdLlmTracesRoute =
  ProtectedProjectsProjectIdLlmTracesRouteImport.update({
    id: '/llm-traces',
    path: '/llm-traces',
    getParentRoute: () => ProtectedProjectsProjectIdRoute,
  } as any)
const ProtectedProjectsProjectIdGoalsRoute =
  ProtectedProjectsProjectIdGoalsRouteImport.update({
    id: '/goals',
    path: '/goals',
    getParentRoute: () => ProtectedProjectsProjectIdRoute,
  } as any)
const ProtectedProjectsProjectIdEventsRoute =
  ProtectedProjectsProjectIdEventsRouteImport.update({
    id: '/events',
    path: '/events',
    getParentRoute: () => ProtectedProjectsProjectIdRoute,
  } as any)
const ProtectedProjectsProjectIdAnalyticsRoute =
  ProtectedProjectsProjectIdAnalyticsRouteImport.update({
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => ProtectedProjectsProjectIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/create-team': typeof CreateTeamRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/select-team': typeof SelectTeamRoute
  '/projects': typeof ProtectedProjectsRouteWithChildren
  '/projects/$projectId': typeof ProtectedProjectsProjectIdRouteWithChildren
  '/projects/new': typeof ProtectedProjectsNewRoute
  '/projects/': typeof ProtectedProjectsIndexRoute
  '/projects/$projectId/analytics': typeof ProtectedProjectsProjectIdAnalyticsRoute
  '/projects/$projectId/events': typeof ProtectedProjectsProjectIdEventsRoute
  '/projects/$projectId/goals': typeof ProtectedProjectsProjectIdGoalsRoute
  '/projects/$projectId/llm-traces': typeof ProtectedProjectsProjectIdLlmTracesRoute
  '/projects/$projectId/revenue': typeof ProtectedProjectsProjectIdRevenueRoute
  '/projects/$projectId/settings': typeof ProtectedProjectsProjectIdSettingsRoute
  '/projects/$projectId/': typeof ProtectedProjectsProjectIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/create-team': typeof CreateTeamRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/select-team': typeof SelectTeamRoute
  '/projects/new': typeof ProtectedProjectsNewRoute
  '/projects': typeof ProtectedProjectsIndexRoute
  '/projects/$projectId/analytics': typeof ProtectedProjectsProjectIdAnalyticsRoute
  '/projects/$projectId/events': typeof ProtectedProjectsProjectIdEventsRoute
  '/projects/$projectId/goals': typeof ProtectedProjectsProjectIdGoalsRoute
  '/projects/$projectId/llm-traces': typeof ProtectedProjectsProjectIdLlmTracesRoute
  '/projects/$projectId/revenue': typeof ProtectedProjectsProjectIdRevenueRoute
  '/projects/$projectId/settings': typeof ProtectedProjectsProjectIdSettingsRoute
  '/projects/$projectId': typeof ProtectedProjectsProjectIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/about': typeof AboutRoute
  '/create-team': typeof CreateTeamRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/select-team': typeof SelectTeamRoute
  '/_protected/projects': typeof ProtectedProjectsRouteWithChildren
  '/_protected/projects/$projectId': typeof ProtectedProjectsProjectIdRouteWithChildren
  '/_protected/projects/new': typeof ProtectedProjectsNewRoute
  '/_protected/projects/': typeof ProtectedProjectsIndexRoute
  '/_protected/projects/$projectId/analytics': typeof ProtectedProjectsProjectIdAnalyticsRoute
  '/_protected/projects/$projectId/events': typeof ProtectedProjectsProjectIdEventsRoute
  '/_protected/projects/$projectId/goals': typeof ProtectedProjectsProjectIdGoalsRoute
  '/_protected/projects/$projectId/llm-traces': typeof ProtectedProjectsProjectIdLlmTracesRoute
  '/_protected/projects/$projectId/revenue': typeof ProtectedProjectsProjectIdRevenueRoute
  '/_protected/projects/$projectId/settings': typeof ProtectedProjectsProjectIdSettingsRoute
  '/_protected/projects/$projectId/': typeof ProtectedProjectsProjectIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/create-team'
    | '/login'
    | '/register'
    | '/select-team'
    | '/projects'
    | '/projects/$projectId'
    | '/projects/new'
    | '/projects/'
    | '/projects/$projectId/analytics'
    | '/projects/$projectId/events'
    | '/projects/$projectId/goals'
    | '/projects/$projectId/llm-traces'
    | '/projects/$projectId/revenue'
    | '/projects/$projectId/settings'
    | '/projects/$projectId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/create-team'
    | '/login'
    | '/register'
    | '/select-team'
    | '/projects/new'
    | '/projects'
    | '/projects/$projectId/analytics'
    | '/projects/$projectId/events'
    | '/projects/$projectId/goals'
    | '/projects/$projectId/llm-traces'
    | '/projects/$projectId/revenue'
    | '/projects/$projectId/settings'
    | '/projects/$projectId'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/about'
    | '/create-team'
    | '/login'
    | '/register'
    | '/select-team'
    | '/_protected/projects'
    | '/_protected/projects/$projectId'
    | '/_protected/projects/new'
    | '/_protected/projects/'
    | '/_protected/projects/$projectId/analytics'
    | '/_protected/projects/$projectId/events'
    | '/_protected/projects/$projectId/goals'
    | '/_protected/projects/$projectId/llm-traces'
    | '/_protected/projects/$projectId/revenue'
    | '/_protected/projects/$projectId/settings'
    | '/_protected/projects/$projectId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AboutRoute: typeof AboutRoute
  CreateTeamRoute: typeof CreateTeamRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  SelectTeamRoute: typeof SelectTeamRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/select-team': {
      id: '/select-team'
      path: '/select-team'
      fullPath: '/select-team'
      preLoaderRoute: typeof SelectTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-team': {
      id: '/create-team'
      path: '/create-team'
      fullPath: '/create-team'
      preLoaderRoute: typeof CreateTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/projects': {
      id: '/_protected/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProtectedProjectsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/projects/': {
      id: '/_protected/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof ProtectedProjectsIndexRouteImport
      parentRoute: typeof ProtectedProjectsRoute
    }
    '/_protected/projects/new': {
      id: '/_protected/projects/new'
      path: '/new'
      fullPath: '/projects/new'
      preLoaderRoute: typeof ProtectedProjectsNewRouteImport
      parentRoute: typeof ProtectedProjectsRoute
    }
    '/_protected/projects/$projectId': {
      id: '/_protected/projects/$projectId'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProtectedProjectsProjectIdRouteImport
      parentRoute: typeof ProtectedProjectsRoute
    }
    '/_protected/projects/$projectId/': {
      id: '/_protected/projects/$projectId/'
      path: '/'
      fullPath: '/projects/$projectId/'
      preLoaderRoute: typeof ProtectedProjectsProjectIdIndexRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRoute
    }
    '/_protected/projects/$projectId/settings': {
      id: '/_protected/projects/$projectId/settings'
      path: '/settings'
      fullPath: '/projects/$projectId/settings'
      preLoaderRoute: typeof ProtectedProjectsProjectIdSettingsRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRoute
    }
    '/_protected/projects/$projectId/revenue': {
      id: '/_protected/projects/$projectId/revenue'
      path: '/revenue'
      fullPath: '/projects/$projectId/revenue'
      preLoaderRoute: typeof ProtectedProjectsProjectIdRevenueRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRoute
    }
    '/_protected/projects/$projectId/llm-traces': {
      id: '/_protected/projects/$projectId/llm-traces'
      path: '/llm-traces'
      fullPath: '/projects/$projectId/llm-traces'
      preLoaderRoute: typeof ProtectedProjectsProjectIdLlmTracesRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRoute
    }
    '/_protected/projects/$projectId/goals': {
      id: '/_protected/projects/$projectId/goals'
      path: '/goals'
      fullPath: '/projects/$projectId/goals'
      preLoaderRoute: typeof ProtectedProjectsProjectIdGoalsRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRoute
    }
    '/_protected/projects/$projectId/events': {
      id: '/_protected/projects/$projectId/events'
      path: '/events'
      fullPath: '/projects/$projectId/events'
      preLoaderRoute: typeof ProtectedProjectsProjectIdEventsRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRoute
    }
    '/_protected/projects/$projectId/analytics': {
      id: '/_protected/projects/$projectId/analytics'
      path: '/analytics'
      fullPath: '/projects/$projectId/analytics'
      preLoaderRoute: typeof ProtectedProjectsProjectIdAnalyticsRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRoute
    }
  }
}

interface ProtectedProjectsProjectIdRouteChildren {
  ProtectedProjectsProjectIdAnalyticsRoute: typeof ProtectedProjectsProjectIdAnalyticsRoute
  ProtectedProjectsProjectIdEventsRoute: typeof ProtectedProjectsProjectIdEventsRoute
  ProtectedProjectsProjectIdGoalsRoute: typeof ProtectedProjectsProjectIdGoalsRoute
  ProtectedProjectsProjectIdLlmTracesRoute: typeof ProtectedProjectsProjectIdLlmTracesRoute
  ProtectedProjectsProjectIdRevenueRoute: typeof ProtectedProjectsProjectIdRevenueRoute
  ProtectedProjectsProjectIdSettingsRoute: typeof ProtectedProjectsProjectIdSettingsRoute
  ProtectedProjectsProjectIdIndexRoute: typeof ProtectedProjectsProjectIdIndexRoute
}

const ProtectedProjectsProjectIdRouteChildren: ProtectedProjectsProjectIdRouteChildren =
  {
    ProtectedProjectsProjectIdAnalyticsRoute:
      ProtectedProjectsProjectIdAnalyticsRoute,
    ProtectedProjectsProjectIdEventsRoute:
      ProtectedProjectsProjectIdEventsRoute,
    ProtectedProjectsProjectIdGoalsRoute: ProtectedProjectsProjectIdGoalsRoute,
    ProtectedProjectsProjectIdLlmTracesRoute:
      ProtectedProjectsProjectIdLlmTracesRoute,
    ProtectedProjectsProjectIdRevenueRoute:
      ProtectedProjectsProjectIdRevenueRoute,
    ProtectedProjectsProjectIdSettingsRoute:
      ProtectedProjectsProjectIdSettingsRoute,
    ProtectedProjectsProjectIdIndexRoute: ProtectedProjectsProjectIdIndexRoute,
  }

const ProtectedProjectsProjectIdRouteWithChildren =
  ProtectedProjectsProjectIdRoute._addFileChildren(
    ProtectedProjectsProjectIdRouteChildren,
  )

interface ProtectedProjectsRouteChildren {
  ProtectedProjectsProjectIdRoute: typeof ProtectedProjectsProjectIdRouteWithChildren
  ProtectedProjectsNewRoute: typeof ProtectedProjectsNewRoute
  ProtectedProjectsIndexRoute: typeof ProtectedProjectsIndexRoute
}

const ProtectedProjectsRouteChildren: ProtectedProjectsRouteChildren = {
  ProtectedProjectsProjectIdRoute: ProtectedProjectsProjectIdRouteWithChildren,
  ProtectedProjectsNewRoute: ProtectedProjectsNewRoute,
  ProtectedProjectsIndexRoute: ProtectedProjectsIndexRoute,
}

const ProtectedProjectsRouteWithChildren =
  ProtectedProjectsRoute._addFileChildren(ProtectedProjectsRouteChildren)

interface ProtectedRouteChildren {
  ProtectedProjectsRoute: typeof ProtectedProjectsRouteWithChildren
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedProjectsRoute: ProtectedProjectsRouteWithChildren,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  AboutRoute: AboutRoute,
  CreateTeamRoute: CreateTeamRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  SelectTeamRoute: SelectTeamRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
